Terminals unused in grammar

   INTEGER
   FLOAT
   STRING
   CHAR
   BOOLEAN
   "typedef"
   "double"


Grammar

    0 $accept: cxx "end of file"

    1 cxx: empty
    2    | declarations
    3    | error ';'

    4 declarations: declaration
    5             | declarations declaration

    6 declaration: namespace_decl
    7            | method_decl ';'
    8            | class_decl ';'
    9            | struct_decl ';'
   10            | enum_decl ';'
   11            | variable_decl ';'

   12 statements: %empty

   13 statement: %empty

   14 class_body: class_part
   15           | class_body class_part

   16 class_part: declaration
   17           | access_specifier

   18 access_specifier: "public" ':'
   19                 | "protected" ':'
   20                 | "private" ':'

   21 enumeration: IDENTIFIER
   22            | enumeration ',' IDENTIFIER

   23 variable_decl: type_name variable_init
   24              | variable_decl ',' variable_init

   25 variable_init: variable_spec
   26              | variable_spec '=' statement

   27 enum_decl: "enum" IDENTIFIER '{' '}'
   28          | "enum" IDENTIFIER '{' enumeration '}'

   29 class_decl: "class" IDENTIFIER
   30           | "class" IDENTIFIER '{' '}'
   31           | "class" IDENTIFIER '{' class_body '}'

   32 struct_decl: "struct" IDENTIFIER
   33            | "struct" IDENTIFIER '{' '}'
   34            | "struct" IDENTIFIER '{' class_body '}'

   35 namespace_decl: "namespace" '{' '}'
   36               | "namespace" '{' declarations '}'
   37               | "namespace" IDENTIFIER '{' '}'
   38               | "namespace" IDENTIFIER '{' declarations '}'

   39 method_decl: type_name variable_spec '(' ')' method_body
   40            | type_name variable_spec '(' method_params ')' method_body

   41 method_params: type_name
   42              | type_name variable_spec
   43              | method_params ',' type_name
   44              | method_params ',' type_name variable_spec

   45 method_body: empty
   46            | '{' statements '}'

   47 variable_spec: IDENTIFIER
   48              | "&" IDENTIFIER
   49              | "*" variable_spec

   50 type_name: integer_type
   51          | scoped_name

   52 integer_type: "short"
   53             | "long"
   54             | "int"
   55             | "unsigned"
   56             | "short" integer_type
   57             | "long" integer_type
   58             | "int" integer_type
   59             | "unsigned" integer_type

   60 scoped_name: IDENTIFIER
   61            | scoped_name "::" IDENTIFIER

   62 empty: %empty


Terminals, with rules where they appear

"end of file" (0) 0
'(' (40) 39 40
')' (41) 39 40
',' (44) 22 24 43 44
':' (58) 18 19 20
';' (59) 3 7 8 9 10 11
'=' (61) 26
'{' (123) 27 28 30 31 33 34 35 36 37 38 46
'}' (125) 27 28 30 31 33 34 35 36 37 38 46
error (256) 3
INTEGER (258)
FLOAT (259)
STRING (260)
CHAR (261)
BOOLEAN (262)
IDENTIFIER (263) 21 22 27 28 29 30 31 32 33 34 37 38 47 48 60 61
"namespace" (264) 35 36 37 38
"public" (265) 18
"protected" (266) 19
"private" (267) 20
"enum" (268) 27 28
"struct" (269) 32 33 34
"class" (270) 29 30 31
"typedef" (271)
"int" (272) 54 58
"double" (273)
"unsigned" (274) 55 59
"long" (275) 53 57
"short" (276) 52 56
"::" (277) 61
"&" (278) 48
"*" (279) 49


Nonterminals, with rules where they appear

$accept (33)
    on left: 0
cxx (34)
    on left: 1 2 3, on right: 0
declarations (35)
    on left: 4 5, on right: 2 5 36 38
declaration (36)
    on left: 6 7 8 9 10 11, on right: 4 5 16
statements (37)
    on left: 12, on right: 46
statement (38)
    on left: 13, on right: 26
class_body (39)
    on left: 14 15, on right: 15 31 34
class_part (40)
    on left: 16 17, on right: 14 15
access_specifier (41)
    on left: 18 19 20, on right: 17
enumeration (42)
    on left: 21 22, on right: 22 28
variable_decl (43)
    on left: 23 24, on right: 11 24
variable_init (44)
    on left: 25 26, on right: 23 24
enum_decl (45)
    on left: 27 28, on right: 10
class_decl (46)
    on left: 29 30 31, on right: 8
struct_decl (47)
    on left: 32 33 34, on right: 9
namespace_decl (48)
    on left: 35 36 37 38, on right: 6
method_decl (49)
    on left: 39 40, on right: 7
method_params (50)
    on left: 41 42 43 44, on right: 40 43 44
method_body (51)
    on left: 45 46, on right: 39 40
variable_spec (52)
    on left: 47 48 49, on right: 25 26 39 40 42 44 49
type_name (53)
    on left: 50 51, on right: 23 39 40 41 42 43 44
integer_type (54)
    on left: 52 53 54 55 56 57 58 59, on right: 50 56 57 58 59
scoped_name (55)
    on left: 60 61, on right: 51 61
empty (56)
    on left: 62, on right: 1 45


State 0

    0 $accept: . cxx "end of file"

    error        shift, and go to state 1
    IDENTIFIER   shift, and go to state 2
    "namespace"  shift, and go to state 3
    "enum"       shift, and go to state 4
    "struct"     shift, and go to state 5
    "class"      shift, and go to state 6
    "int"        shift, and go to state 7
    "unsigned"   shift, and go to state 8
    "long"       shift, and go to state 9
    "short"      shift, and go to state 10

    "end of file"  reduce using rule 62 (empty)

    cxx             go to state 11
    declarations    go to state 12
    declaration     go to state 13
    variable_decl   go to state 14
    enum_decl       go to state 15
    class_decl      go to state 16
    struct_decl     go to state 17
    namespace_decl  go to state 18
    method_decl     go to state 19
    type_name       go to state 20
    integer_type    go to state 21
    scoped_name     go to state 22
    empty           go to state 23


State 1

    3 cxx: error . ';'

    ';'  shift, and go to state 24


State 2

   60 scoped_name: IDENTIFIER .

    $default  reduce using rule 60 (scoped_name)


State 3

   35 namespace_decl: "namespace" . '{' '}'
   36               | "namespace" . '{' declarations '}'
   37               | "namespace" . IDENTIFIER '{' '}'
   38               | "namespace" . IDENTIFIER '{' declarations '}'

    IDENTIFIER  shift, and go to state 25
    '{'         shift, and go to state 26


State 4

   27 enum_decl: "enum" . IDENTIFIER '{' '}'
   28          | "enum" . IDENTIFIER '{' enumeration '}'

    IDENTIFIER  shift, and go to state 27


State 5

   32 struct_decl: "struct" . IDENTIFIER
   33            | "struct" . IDENTIFIER '{' '}'
   34            | "struct" . IDENTIFIER '{' class_body '}'

    IDENTIFIER  shift, and go to state 28


State 6

   29 class_decl: "class" . IDENTIFIER
   30           | "class" . IDENTIFIER '{' '}'
   31           | "class" . IDENTIFIER '{' class_body '}'

    IDENTIFIER  shift, and go to state 29


State 7

   54 integer_type: "int" .
   58             | "int" . integer_type

    "int"       shift, and go to state 7
    "unsigned"  shift, and go to state 8
    "long"      shift, and go to state 9
    "short"     shift, and go to state 10

    $default  reduce using rule 54 (integer_type)

    integer_type  go to state 30


State 8

   55 integer_type: "unsigned" .
   59             | "unsigned" . integer_type

    "int"       shift, and go to state 7
    "unsigned"  shift, and go to state 8
    "long"      shift, and go to state 9
    "short"     shift, and go to state 10

    $default  reduce using rule 55 (integer_type)

    integer_type  go to state 31


State 9

   53 integer_type: "long" .
   57             | "long" . integer_type

    "int"       shift, and go to state 7
    "unsigned"  shift, and go to state 8
    "long"      shift, and go to state 9
    "short"     shift, and go to state 10

    $default  reduce using rule 53 (integer_type)

    integer_type  go to state 32


State 10

   52 integer_type: "short" .
   56             | "short" . integer_type

    "int"       shift, and go to state 7
    "unsigned"  shift, and go to state 8
    "long"      shift, and go to state 9
    "short"     shift, and go to state 10

    $default  reduce using rule 52 (integer_type)

    integer_type  go to state 33


State 11

    0 $accept: cxx . "end of file"

    "end of file"  shift, and go to state 34


State 12

    2 cxx: declarations .
    5 declarations: declarations . declaration

    IDENTIFIER   shift, and go to state 2
    "namespace"  shift, and go to state 3
    "enum"       shift, and go to state 4
    "struct"     shift, and go to state 5
    "class"      shift, and go to state 6
    "int"        shift, and go to state 7
    "unsigned"   shift, and go to state 8
    "long"       shift, and go to state 9
    "short"      shift, and go to state 10

    $default  reduce using rule 2 (cxx)

    declaration     go to state 35
    variable_decl   go to state 14
    enum_decl       go to state 15
    class_decl      go to state 16
    struct_decl     go to state 17
    namespace_decl  go to state 18
    method_decl     go to state 19
    type_name       go to state 20
    integer_type    go to state 21
    scoped_name     go to state 22


State 13

    4 declarations: declaration .

    $default  reduce using rule 4 (declarations)


State 14

   11 declaration: variable_decl . ';'
   24 variable_decl: variable_decl . ',' variable_init

    ';'  shift, and go to state 36
    ','  shift, and go to state 37


State 15

   10 declaration: enum_decl . ';'

    ';'  shift, and go to state 38


State 16

    8 declaration: class_decl . ';'

    ';'  shift, and go to state 39


State 17

    9 declaration: struct_decl . ';'

    ';'  shift, and go to state 40


State 18

    6 declaration: namespace_decl .

    $default  reduce using rule 6 (declaration)


State 19

    7 declaration: method_decl . ';'

    ';'  shift, and go to state 41


State 20

   23 variable_decl: type_name . variable_init
   39 method_decl: type_name . variable_spec '(' ')' method_body
   40            | type_name . variable_spec '(' method_params ')' method_body

    IDENTIFIER  shift, and go to state 42
    "&"         shift, and go to state 43
    "*"         shift, and go to state 44

    variable_init  go to state 45
    variable_spec  go to state 46


State 21

   50 type_name: integer_type .

    $default  reduce using rule 50 (type_name)


State 22

   51 type_name: scoped_name .
   61 scoped_name: scoped_name . "::" IDENTIFIER

    "::"  shift, and go to state 47

    $default  reduce using rule 51 (type_name)


State 23

    1 cxx: empty .

    $default  reduce using rule 1 (cxx)


State 24

    3 cxx: error ';' .

    $default  reduce using rule 3 (cxx)


State 25

   37 namespace_decl: "namespace" IDENTIFIER . '{' '}'
   38               | "namespace" IDENTIFIER . '{' declarations '}'

    '{'  shift, and go to state 48


State 26

   35 namespace_decl: "namespace" '{' . '}'
   36               | "namespace" '{' . declarations '}'

    IDENTIFIER   shift, and go to state 2
    "namespace"  shift, and go to state 3
    "enum"       shift, and go to state 4
    "struct"     shift, and go to state 5
    "class"      shift, and go to state 6
    "int"        shift, and go to state 7
    "unsigned"   shift, and go to state 8
    "long"       shift, and go to state 9
    "short"      shift, and go to state 10
    '}'          shift, and go to state 49

    declarations    go to state 50
    declaration     go to state 13
    variable_decl   go to state 14
    enum_decl       go to state 15
    class_decl      go to state 16
    struct_decl     go to state 17
    namespace_decl  go to state 18
    method_decl     go to state 19
    type_name       go to state 20
    integer_type    go to state 21
    scoped_name     go to state 22


State 27

   27 enum_decl: "enum" IDENTIFIER . '{' '}'
   28          | "enum" IDENTIFIER . '{' enumeration '}'

    '{'  shift, and go to state 51


State 28

   32 struct_decl: "struct" IDENTIFIER .
   33            | "struct" IDENTIFIER . '{' '}'
   34            | "struct" IDENTIFIER . '{' class_body '}'

    '{'  shift, and go to state 52

    $default  reduce using rule 32 (struct_decl)


State 29

   29 class_decl: "class" IDENTIFIER .
   30           | "class" IDENTIFIER . '{' '}'
   31           | "class" IDENTIFIER . '{' class_body '}'

    '{'  shift, and go to state 53

    $default  reduce using rule 29 (class_decl)


State 30

   58 integer_type: "int" integer_type .

    $default  reduce using rule 58 (integer_type)


State 31

   59 integer_type: "unsigned" integer_type .

    $default  reduce using rule 59 (integer_type)


State 32

   57 integer_type: "long" integer_type .

    $default  reduce using rule 57 (integer_type)


State 33

   56 integer_type: "short" integer_type .

    $default  reduce using rule 56 (integer_type)


State 34

    0 $accept: cxx "end of file" .

    $default  accept


State 35

    5 declarations: declarations declaration .

    $default  reduce using rule 5 (declarations)


State 36

   11 declaration: variable_decl ';' .

    $default  reduce using rule 11 (declaration)


State 37

   24 variable_decl: variable_decl ',' . variable_init

    IDENTIFIER  shift, and go to state 42
    "&"         shift, and go to state 43
    "*"         shift, and go to state 44

    variable_init  go to state 54
    variable_spec  go to state 55


State 38

   10 declaration: enum_decl ';' .

    $default  reduce using rule 10 (declaration)


State 39

    8 declaration: class_decl ';' .

    $default  reduce using rule 8 (declaration)


State 40

    9 declaration: struct_decl ';' .

    $default  reduce using rule 9 (declaration)


State 41

    7 declaration: method_decl ';' .

    $default  reduce using rule 7 (declaration)


State 42

   47 variable_spec: IDENTIFIER .

    $default  reduce using rule 47 (variable_spec)


State 43

   48 variable_spec: "&" . IDENTIFIER

    IDENTIFIER  shift, and go to state 56


State 44

   49 variable_spec: "*" . variable_spec

    IDENTIFIER  shift, and go to state 42
    "&"         shift, and go to state 43
    "*"         shift, and go to state 44

    variable_spec  go to state 57


State 45

   23 variable_decl: type_name variable_init .

    $default  reduce using rule 23 (variable_decl)


State 46

   25 variable_init: variable_spec .
   26              | variable_spec . '=' statement
   39 method_decl: type_name variable_spec . '(' ')' method_body
   40            | type_name variable_spec . '(' method_params ')' method_body

    '='  shift, and go to state 58
    '('  shift, and go to state 59

    $default  reduce using rule 25 (variable_init)


State 47

   61 scoped_name: scoped_name "::" . IDENTIFIER

    IDENTIFIER  shift, and go to state 60


State 48

   37 namespace_decl: "namespace" IDENTIFIER '{' . '}'
   38               | "namespace" IDENTIFIER '{' . declarations '}'

    IDENTIFIER   shift, and go to state 2
    "namespace"  shift, and go to state 3
    "enum"       shift, and go to state 4
    "struct"     shift, and go to state 5
    "class"      shift, and go to state 6
    "int"        shift, and go to state 7
    "unsigned"   shift, and go to state 8
    "long"       shift, and go to state 9
    "short"      shift, and go to state 10
    '}'          shift, and go to state 61

    declarations    go to state 62
    declaration     go to state 13
    variable_decl   go to state 14
    enum_decl       go to state 15
    class_decl      go to state 16
    struct_decl     go to state 17
    namespace_decl  go to state 18
    method_decl     go to state 19
    type_name       go to state 20
    integer_type    go to state 21
    scoped_name     go to state 22


State 49

   35 namespace_decl: "namespace" '{' '}' .

    $default  reduce using rule 35 (namespace_decl)


State 50

    5 declarations: declarations . declaration
   36 namespace_decl: "namespace" '{' declarations . '}'

    IDENTIFIER   shift, and go to state 2
    "namespace"  shift, and go to state 3
    "enum"       shift, and go to state 4
    "struct"     shift, and go to state 5
    "class"      shift, and go to state 6
    "int"        shift, and go to state 7
    "unsigned"   shift, and go to state 8
    "long"       shift, and go to state 9
    "short"      shift, and go to state 10
    '}'          shift, and go to state 63

    declaration     go to state 35
    variable_decl   go to state 14
    enum_decl       go to state 15
    class_decl      go to state 16
    struct_decl     go to state 17
    namespace_decl  go to state 18
    method_decl     go to state 19
    type_name       go to state 20
    integer_type    go to state 21
    scoped_name     go to state 22


State 51

   27 enum_decl: "enum" IDENTIFIER '{' . '}'
   28          | "enum" IDENTIFIER '{' . enumeration '}'

    IDENTIFIER  shift, and go to state 64
    '}'         shift, and go to state 65

    enumeration  go to state 66


State 52

   33 struct_decl: "struct" IDENTIFIER '{' . '}'
   34            | "struct" IDENTIFIER '{' . class_body '}'

    IDENTIFIER   shift, and go to state 2
    "namespace"  shift, and go to state 3
    "public"     shift, and go to state 67
    "protected"  shift, and go to state 68
    "private"    shift, and go to state 69
    "enum"       shift, and go to state 4
    "struct"     shift, and go to state 5
    "class"      shift, and go to state 6
    "int"        shift, and go to state 7
    "unsigned"   shift, and go to state 8
    "long"       shift, and go to state 9
    "short"      shift, and go to state 10
    '}'          shift, and go to state 70

    declaration       go to state 71
    class_body        go to state 72
    class_part        go to state 73
    access_specifier  go to state 74
    variable_decl     go to state 14
    enum_decl         go to state 15
    class_decl        go to state 16
    struct_decl       go to state 17
    namespace_decl    go to state 18
    method_decl       go to state 19
    type_name         go to state 20
    integer_type      go to state 21
    scoped_name       go to state 22


State 53

   30 class_decl: "class" IDENTIFIER '{' . '}'
   31           | "class" IDENTIFIER '{' . class_body '}'

    IDENTIFIER   shift, and go to state 2
    "namespace"  shift, and go to state 3
    "public"     shift, and go to state 67
    "protected"  shift, and go to state 68
    "private"    shift, and go to state 69
    "enum"       shift, and go to state 4
    "struct"     shift, and go to state 5
    "class"      shift, and go to state 6
    "int"        shift, and go to state 7
    "unsigned"   shift, and go to state 8
    "long"       shift, and go to state 9
    "short"      shift, and go to state 10
    '}'          shift, and go to state 75

    declaration       go to state 71
    class_body        go to state 76
    class_part        go to state 73
    access_specifier  go to state 74
    variable_decl     go to state 14
    enum_decl         go to state 15
    class_decl        go to state 16
    struct_decl       go to state 17
    namespace_decl    go to state 18
    method_decl       go to state 19
    type_name         go to state 20
    integer_type      go to state 21
    scoped_name       go to state 22


State 54

   24 variable_decl: variable_decl ',' variable_init .

    $default  reduce using rule 24 (variable_decl)


State 55

   25 variable_init: variable_spec .
   26              | variable_spec . '=' statement

    '='  shift, and go to state 58

    $default  reduce using rule 25 (variable_init)


State 56

   48 variable_spec: "&" IDENTIFIER .

    $default  reduce using rule 48 (variable_spec)


State 57

   49 variable_spec: "*" variable_spec .

    $default  reduce using rule 49 (variable_spec)


State 58

   26 variable_init: variable_spec '=' . statement

    $default  reduce using rule 13 (statement)

    statement  go to state 77


State 59

   39 method_decl: type_name variable_spec '(' . ')' method_body
   40            | type_name variable_spec '(' . method_params ')' method_body

    IDENTIFIER  shift, and go to state 2
    "int"       shift, and go to state 7
    "unsigned"  shift, and go to state 8
    "long"      shift, and go to state 9
    "short"     shift, and go to state 10
    ')'         shift, and go to state 78

    method_params  go to state 79
    type_name      go to state 80
    integer_type   go to state 21
    scoped_name    go to state 22


State 60

   61 scoped_name: scoped_name "::" IDENTIFIER .

    $default  reduce using rule 61 (scoped_name)


State 61

   37 namespace_decl: "namespace" IDENTIFIER '{' '}' .

    $default  reduce using rule 37 (namespace_decl)


State 62

    5 declarations: declarations . declaration
   38 namespace_decl: "namespace" IDENTIFIER '{' declarations . '}'

    IDENTIFIER   shift, and go to state 2
    "namespace"  shift, and go to state 3
    "enum"       shift, and go to state 4
    "struct"     shift, and go to state 5
    "class"      shift, and go to state 6
    "int"        shift, and go to state 7
    "unsigned"   shift, and go to state 8
    "long"       shift, and go to state 9
    "short"      shift, and go to state 10
    '}'          shift, and go to state 81

    declaration     go to state 35
    variable_decl   go to state 14
    enum_decl       go to state 15
    class_decl      go to state 16
    struct_decl     go to state 17
    namespace_decl  go to state 18
    method_decl     go to state 19
    type_name       go to state 20
    integer_type    go to state 21
    scoped_name     go to state 22


State 63

   36 namespace_decl: "namespace" '{' declarations '}' .

    $default  reduce using rule 36 (namespace_decl)


State 64

   21 enumeration: IDENTIFIER .

    $default  reduce using rule 21 (enumeration)


State 65

   27 enum_decl: "enum" IDENTIFIER '{' '}' .

    $default  reduce using rule 27 (enum_decl)


State 66

   22 enumeration: enumeration . ',' IDENTIFIER
   28 enum_decl: "enum" IDENTIFIER '{' enumeration . '}'

    ','  shift, and go to state 82
    '}'  shift, and go to state 83


State 67

   18 access_specifier: "public" . ':'

    ':'  shift, and go to state 84


State 68

   19 access_specifier: "protected" . ':'

    ':'  shift, and go to state 85


State 69

   20 access_specifier: "private" . ':'

    ':'  shift, and go to state 86


State 70

   33 struct_decl: "struct" IDENTIFIER '{' '}' .

    $default  reduce using rule 33 (struct_decl)


State 71

   16 class_part: declaration .

    $default  reduce using rule 16 (class_part)


State 72

   15 class_body: class_body . class_part
   34 struct_decl: "struct" IDENTIFIER '{' class_body . '}'

    IDENTIFIER   shift, and go to state 2
    "namespace"  shift, and go to state 3
    "public"     shift, and go to state 67
    "protected"  shift, and go to state 68
    "private"    shift, and go to state 69
    "enum"       shift, and go to state 4
    "struct"     shift, and go to state 5
    "class"      shift, and go to state 6
    "int"        shift, and go to state 7
    "unsigned"   shift, and go to state 8
    "long"       shift, and go to state 9
    "short"      shift, and go to state 10
    '}'          shift, and go to state 87

    declaration       go to state 71
    class_part        go to state 88
    access_specifier  go to state 74
    variable_decl     go to state 14
    enum_decl         go to state 15
    class_decl        go to state 16
    struct_decl       go to state 17
    namespace_decl    go to state 18
    method_decl       go to state 19
    type_name         go to state 20
    integer_type      go to state 21
    scoped_name       go to state 22


State 73

   14 class_body: class_part .

    $default  reduce using rule 14 (class_body)


State 74

   17 class_part: access_specifier .

    $default  reduce using rule 17 (class_part)


State 75

   30 class_decl: "class" IDENTIFIER '{' '}' .

    $default  reduce using rule 30 (class_decl)


State 76

   15 class_body: class_body . class_part
   31 class_decl: "class" IDENTIFIER '{' class_body . '}'

    IDENTIFIER   shift, and go to state 2
    "namespace"  shift, and go to state 3
    "public"     shift, and go to state 67
    "protected"  shift, and go to state 68
    "private"    shift, and go to state 69
    "enum"       shift, and go to state 4
    "struct"     shift, and go to state 5
    "class"      shift, and go to state 6
    "int"        shift, and go to state 7
    "unsigned"   shift, and go to state 8
    "long"       shift, and go to state 9
    "short"      shift, and go to state 10
    '}'          shift, and go to state 89

    declaration       go to state 71
    class_part        go to state 88
    access_specifier  go to state 74
    variable_decl     go to state 14
    enum_decl         go to state 15
    class_decl        go to state 16
    struct_decl       go to state 17
    namespace_decl    go to state 18
    method_decl       go to state 19
    type_name         go to state 20
    integer_type      go to state 21
    scoped_name       go to state 22


State 77

   26 variable_init: variable_spec '=' statement .

    $default  reduce using rule 26 (variable_init)


State 78

   39 method_decl: type_name variable_spec '(' ')' . method_body

    '{'  shift, and go to state 90

    $default  reduce using rule 62 (empty)

    method_body  go to state 91
    empty        go to state 92


State 79

   40 method_decl: type_name variable_spec '(' method_params . ')' method_body
   43 method_params: method_params . ',' type_name
   44              | method_params . ',' type_name variable_spec

    ','  shift, and go to state 93
    ')'  shift, and go to state 94


State 80

   41 method_params: type_name .
   42              | type_name . variable_spec

    IDENTIFIER  shift, and go to state 42
    "&"         shift, and go to state 43
    "*"         shift, and go to state 44

    $default  reduce using rule 41 (method_params)

    variable_spec  go to state 95


State 81

   38 namespace_decl: "namespace" IDENTIFIER '{' declarations '}' .

    $default  reduce using rule 38 (namespace_decl)


State 82

   22 enumeration: enumeration ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 96


State 83

   28 enum_decl: "enum" IDENTIFIER '{' enumeration '}' .

    $default  reduce using rule 28 (enum_decl)


State 84

   18 access_specifier: "public" ':' .

    $default  reduce using rule 18 (access_specifier)


State 85

   19 access_specifier: "protected" ':' .

    $default  reduce using rule 19 (access_specifier)


State 86

   20 access_specifier: "private" ':' .

    $default  reduce using rule 20 (access_specifier)


State 87

   34 struct_decl: "struct" IDENTIFIER '{' class_body '}' .

    $default  reduce using rule 34 (struct_decl)


State 88

   15 class_body: class_body class_part .

    $default  reduce using rule 15 (class_body)


State 89

   31 class_decl: "class" IDENTIFIER '{' class_body '}' .

    $default  reduce using rule 31 (class_decl)


State 90

   46 method_body: '{' . statements '}'

    $default  reduce using rule 12 (statements)

    statements  go to state 97


State 91

   39 method_decl: type_name variable_spec '(' ')' method_body .

    $default  reduce using rule 39 (method_decl)


State 92

   45 method_body: empty .

    $default  reduce using rule 45 (method_body)


State 93

   43 method_params: method_params ',' . type_name
   44              | method_params ',' . type_name variable_spec

    IDENTIFIER  shift, and go to state 2
    "int"       shift, and go to state 7
    "unsigned"  shift, and go to state 8
    "long"      shift, and go to state 9
    "short"     shift, and go to state 10

    type_name     go to state 98
    integer_type  go to state 21
    scoped_name   go to state 22


State 94

   40 method_decl: type_name variable_spec '(' method_params ')' . method_body

    '{'  shift, and go to state 90

    $default  reduce using rule 62 (empty)

    method_body  go to state 99
    empty        go to state 92


State 95

   42 method_params: type_name variable_spec .

    $default  reduce using rule 42 (method_params)


State 96

   22 enumeration: enumeration ',' IDENTIFIER .

    $default  reduce using rule 22 (enumeration)


State 97

   46 method_body: '{' statements . '}'

    '}'  shift, and go to state 100


State 98

   43 method_params: method_params ',' type_name .
   44              | method_params ',' type_name . variable_spec

    IDENTIFIER  shift, and go to state 42
    "&"         shift, and go to state 43
    "*"         shift, and go to state 44

    $default  reduce using rule 43 (method_params)

    variable_spec  go to state 101


State 99

   40 method_decl: type_name variable_spec '(' method_params ')' method_body .

    $default  reduce using rule 40 (method_decl)


State 100

   46 method_body: '{' statements '}' .

    $default  reduce using rule 46 (method_body)


State 101

   44 method_params: method_params ',' type_name variable_spec .

    $default  reduce using rule 44 (method_params)
