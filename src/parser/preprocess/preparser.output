Grammar

    0 $accept: grammar "end of file"

    1 grammar: if_directive

    2 if_directive: expr_condition

    3 expr_condition: condition
    4               | expr_condition "||" condition
    5               | expr_condition "&&" condition

    6 condition: cond_defined
    7          | cond_compare
    8          | "!" condition
    9          | '(' expr_condition ')'

   10 cond_compare: expr_equation "==" expr_equation
   11             | expr_equation "!=" expr_equation
   12             | expr_equation "<=" expr_equation
   13             | expr_equation ">=" expr_equation
   14             | expr_equation "<" expr_equation
   15             | expr_equation ">" expr_equation

   16 cond_defined: "defined" IDENTIFIER

   17 expr_equation: number
   18              | expr_equation "-" number
   19              | expr_equation "+" number
   20              | '(' expr_equation ')'

   21 number: IDENTIFIER
   22       | INTEGER
   23       | FLOAT
   24       | CHAR
   25       | BOOLEAN


Terminals, with rules where they appear

"end of file" (0) 0
'(' (40) 9 20
')' (41) 9 20
error (256)
INTEGER (258) 22
FLOAT (259) 23
CHAR (260) 24
BOOLEAN (261) 25
IDENTIFIER (262) 16 21
"defined" (263) 16
"&&" (264) 5
"||" (265) 4
"==" (266) 10
"!=" (267) 11
">=" (268) 13
"<=" (269) 12
"<" (270) 14
">" (271) 15
"!" (272) 8
"-" (273) 18
"+" (274) 19


Nonterminals, with rules where they appear

$accept (22)
    on left: 0
grammar (23)
    on left: 1, on right: 0
if_directive (24)
    on left: 2, on right: 1
expr_condition (25)
    on left: 3 4 5, on right: 2 4 5 9
condition (26)
    on left: 6 7 8 9, on right: 3 4 5 8
cond_compare (27)
    on left: 10 11 12 13 14 15, on right: 7
cond_defined (28)
    on left: 16, on right: 6
expr_equation (29)
    on left: 17 18 19 20, on right: 10 11 12 13 14 15 18 19 20
number (30)
    on left: 21 22 23 24 25, on right: 17 18 19


State 0

    0 $accept: . grammar "end of file"

    INTEGER     shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOLEAN     shift, and go to state 4
    IDENTIFIER  shift, and go to state 5
    "defined"   shift, and go to state 6
    "!"         shift, and go to state 7
    '('         shift, and go to state 8

    grammar         go to state 9
    if_directive    go to state 10
    expr_condition  go to state 11
    condition       go to state 12
    cond_compare    go to state 13
    cond_defined    go to state 14
    expr_equation   go to state 15
    number          go to state 16


State 1

   22 number: INTEGER .

    $default  reduce using rule 22 (number)


State 2

   23 number: FLOAT .

    $default  reduce using rule 23 (number)


State 3

   24 number: CHAR .

    $default  reduce using rule 24 (number)


State 4

   25 number: BOOLEAN .

    $default  reduce using rule 25 (number)


State 5

   21 number: IDENTIFIER .

    $default  reduce using rule 21 (number)


State 6

   16 cond_defined: "defined" . IDENTIFIER

    IDENTIFIER  shift, and go to state 17


State 7

    8 condition: "!" . condition

    INTEGER     shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOLEAN     shift, and go to state 4
    IDENTIFIER  shift, and go to state 5
    "defined"   shift, and go to state 6
    "!"         shift, and go to state 7
    '('         shift, and go to state 8

    condition      go to state 18
    cond_compare   go to state 13
    cond_defined   go to state 14
    expr_equation  go to state 15
    number         go to state 16


State 8

    9 condition: '(' . expr_condition ')'
   20 expr_equation: '(' . expr_equation ')'

    INTEGER     shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOLEAN     shift, and go to state 4
    IDENTIFIER  shift, and go to state 5
    "defined"   shift, and go to state 6
    "!"         shift, and go to state 7
    '('         shift, and go to state 8

    expr_condition  go to state 19
    condition       go to state 12
    cond_compare    go to state 13
    cond_defined    go to state 14
    expr_equation   go to state 20
    number          go to state 16


State 9

    0 $accept: grammar . "end of file"

    "end of file"  shift, and go to state 21


State 10

    1 grammar: if_directive .

    $default  reduce using rule 1 (grammar)


State 11

    2 if_directive: expr_condition .
    4 expr_condition: expr_condition . "||" condition
    5               | expr_condition . "&&" condition

    "&&"  shift, and go to state 22
    "||"  shift, and go to state 23

    $default  reduce using rule 2 (if_directive)


State 12

    3 expr_condition: condition .

    $default  reduce using rule 3 (expr_condition)


State 13

    7 condition: cond_compare .

    $default  reduce using rule 7 (condition)


State 14

    6 condition: cond_defined .

    $default  reduce using rule 6 (condition)


State 15

   10 cond_compare: expr_equation . "==" expr_equation
   11             | expr_equation . "!=" expr_equation
   12             | expr_equation . "<=" expr_equation
   13             | expr_equation . ">=" expr_equation
   14             | expr_equation . "<" expr_equation
   15             | expr_equation . ">" expr_equation
   18 expr_equation: expr_equation . "-" number
   19              | expr_equation . "+" number

    "=="  shift, and go to state 24
    "!="  shift, and go to state 25
    ">="  shift, and go to state 26
    "<="  shift, and go to state 27
    "<"   shift, and go to state 28
    ">"   shift, and go to state 29
    "-"   shift, and go to state 30
    "+"   shift, and go to state 31


State 16

   17 expr_equation: number .

    $default  reduce using rule 17 (expr_equation)


State 17

   16 cond_defined: "defined" IDENTIFIER .

    $default  reduce using rule 16 (cond_defined)


State 18

    8 condition: "!" condition .

    $default  reduce using rule 8 (condition)


State 19

    4 expr_condition: expr_condition . "||" condition
    5               | expr_condition . "&&" condition
    9 condition: '(' expr_condition . ')'

    "&&"  shift, and go to state 22
    "||"  shift, and go to state 23
    ')'   shift, and go to state 32


State 20

   10 cond_compare: expr_equation . "==" expr_equation
   11             | expr_equation . "!=" expr_equation
   12             | expr_equation . "<=" expr_equation
   13             | expr_equation . ">=" expr_equation
   14             | expr_equation . "<" expr_equation
   15             | expr_equation . ">" expr_equation
   18 expr_equation: expr_equation . "-" number
   19              | expr_equation . "+" number
   20              | '(' expr_equation . ')'

    "=="  shift, and go to state 24
    "!="  shift, and go to state 25
    ">="  shift, and go to state 26
    "<="  shift, and go to state 27
    "<"   shift, and go to state 28
    ">"   shift, and go to state 29
    "-"   shift, and go to state 30
    "+"   shift, and go to state 31
    ')'   shift, and go to state 33


State 21

    0 $accept: grammar "end of file" .

    $default  accept


State 22

    5 expr_condition: expr_condition "&&" . condition

    INTEGER     shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOLEAN     shift, and go to state 4
    IDENTIFIER  shift, and go to state 5
    "defined"   shift, and go to state 6
    "!"         shift, and go to state 7
    '('         shift, and go to state 8

    condition      go to state 34
    cond_compare   go to state 13
    cond_defined   go to state 14
    expr_equation  go to state 15
    number         go to state 16


State 23

    4 expr_condition: expr_condition "||" . condition

    INTEGER     shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOLEAN     shift, and go to state 4
    IDENTIFIER  shift, and go to state 5
    "defined"   shift, and go to state 6
    "!"         shift, and go to state 7
    '('         shift, and go to state 8

    condition      go to state 35
    cond_compare   go to state 13
    cond_defined   go to state 14
    expr_equation  go to state 15
    number         go to state 16


State 24

   10 cond_compare: expr_equation "==" . expr_equation

    INTEGER     shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOLEAN     shift, and go to state 4
    IDENTIFIER  shift, and go to state 5
    '('         shift, and go to state 36

    expr_equation  go to state 37
    number         go to state 16


State 25

   11 cond_compare: expr_equation "!=" . expr_equation

    INTEGER     shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOLEAN     shift, and go to state 4
    IDENTIFIER  shift, and go to state 5
    '('         shift, and go to state 36

    expr_equation  go to state 38
    number         go to state 16


State 26

   13 cond_compare: expr_equation ">=" . expr_equation

    INTEGER     shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOLEAN     shift, and go to state 4
    IDENTIFIER  shift, and go to state 5
    '('         shift, and go to state 36

    expr_equation  go to state 39
    number         go to state 16


State 27

   12 cond_compare: expr_equation "<=" . expr_equation

    INTEGER     shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOLEAN     shift, and go to state 4
    IDENTIFIER  shift, and go to state 5
    '('         shift, and go to state 36

    expr_equation  go to state 40
    number         go to state 16


State 28

   14 cond_compare: expr_equation "<" . expr_equation

    INTEGER     shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOLEAN     shift, and go to state 4
    IDENTIFIER  shift, and go to state 5
    '('         shift, and go to state 36

    expr_equation  go to state 41
    number         go to state 16


State 29

   15 cond_compare: expr_equation ">" . expr_equation

    INTEGER     shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOLEAN     shift, and go to state 4
    IDENTIFIER  shift, and go to state 5
    '('         shift, and go to state 36

    expr_equation  go to state 42
    number         go to state 16


State 30

   18 expr_equation: expr_equation "-" . number

    INTEGER     shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOLEAN     shift, and go to state 4
    IDENTIFIER  shift, and go to state 5

    number  go to state 43


State 31

   19 expr_equation: expr_equation "+" . number

    INTEGER     shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOLEAN     shift, and go to state 4
    IDENTIFIER  shift, and go to state 5

    number  go to state 44


State 32

    9 condition: '(' expr_condition ')' .

    $default  reduce using rule 9 (condition)


State 33

   20 expr_equation: '(' expr_equation ')' .

    $default  reduce using rule 20 (expr_equation)


State 34

    5 expr_condition: expr_condition "&&" condition .

    $default  reduce using rule 5 (expr_condition)


State 35

    4 expr_condition: expr_condition "||" condition .

    $default  reduce using rule 4 (expr_condition)


State 36

   20 expr_equation: '(' . expr_equation ')'

    INTEGER     shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    BOOLEAN     shift, and go to state 4
    IDENTIFIER  shift, and go to state 5
    '('         shift, and go to state 36

    expr_equation  go to state 45
    number         go to state 16


State 37

   10 cond_compare: expr_equation "==" expr_equation .
   18 expr_equation: expr_equation . "-" number
   19              | expr_equation . "+" number

    "-"  shift, and go to state 30
    "+"  shift, and go to state 31

    $default  reduce using rule 10 (cond_compare)


State 38

   11 cond_compare: expr_equation "!=" expr_equation .
   18 expr_equation: expr_equation . "-" number
   19              | expr_equation . "+" number

    "-"  shift, and go to state 30
    "+"  shift, and go to state 31

    $default  reduce using rule 11 (cond_compare)


State 39

   13 cond_compare: expr_equation ">=" expr_equation .
   18 expr_equation: expr_equation . "-" number
   19              | expr_equation . "+" number

    "-"  shift, and go to state 30
    "+"  shift, and go to state 31

    $default  reduce using rule 13 (cond_compare)


State 40

   12 cond_compare: expr_equation "<=" expr_equation .
   18 expr_equation: expr_equation . "-" number
   19              | expr_equation . "+" number

    "-"  shift, and go to state 30
    "+"  shift, and go to state 31

    $default  reduce using rule 12 (cond_compare)


State 41

   14 cond_compare: expr_equation "<" expr_equation .
   18 expr_equation: expr_equation . "-" number
   19              | expr_equation . "+" number

    "-"  shift, and go to state 30
    "+"  shift, and go to state 31

    $default  reduce using rule 14 (cond_compare)


State 42

   15 cond_compare: expr_equation ">" expr_equation .
   18 expr_equation: expr_equation . "-" number
   19              | expr_equation . "+" number

    "-"  shift, and go to state 30
    "+"  shift, and go to state 31

    $default  reduce using rule 15 (cond_compare)


State 43

   18 expr_equation: expr_equation "-" number .

    $default  reduce using rule 18 (expr_equation)


State 44

   19 expr_equation: expr_equation "+" number .

    $default  reduce using rule 19 (expr_equation)


State 45

   18 expr_equation: expr_equation . "-" number
   19              | expr_equation . "+" number
   20              | '(' expr_equation . ')'

    "-"  shift, and go to state 30
    "+"  shift, and go to state 31
    ')'  shift, and go to state 33
