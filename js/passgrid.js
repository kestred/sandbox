// Generated by CoffeeScript 1.6.3
(function() {
  var Pattern, Point,
    __slice = [].slice;

  Point = (function() {
    function Point(x, y, cell) {
      this.x = x;
      this.y = y;
      this.cell = cell;
    }

    Point.prototype.stringy = function() {
      return "(" + this.x + ", " + this.y + ")";
    };

    return Point;

  })();

  Pattern = (function() {
    function Pattern() {
      this.points = [];
    }

    Pattern.prototype.addPoint = function(point) {
      var p;
      for (p in this.points) {
        if (p.x === point.x && p.y === point.y) {
          return;
        }
      }
      return this.points = __slice.call(this.points).concat([point]);
    };

    Pattern.prototype.toHash = function() {
      var p, stringify, _i, _len, _ref;
      if (CryptoJS.SHA3 != null) {
        stringify = "";
        _ref = this.points;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          p = _ref[_i];
          stringify += p.stringy();
        }
        return CryptoJS.SHA3(stringify);
      }
    };

    return Pattern;

  })();

  window.PasswordGrid = function(width, height) {
    var i, j, password, point, points, table, td, tr, _i, _len;
    points = [];
    password = new Pattern();
    table = document.createElement("table");
    table.className = "passgrid";
    table.pattern = password;
    i = 0;
    while (i < height) {
      tr = table.insertRow(-1);
      j = 0;
      while (j < width) {
        td = tr.insertCell(-1);
        points = __slice.call(points).concat([new Point(i, j, td)]);
        j++;
      }
      i++;
    }
    for (_i = 0, _len = points.length; _i < _len; _i++) {
      point = points[_i];
      if (typeof jQuery !== "undefined" && jQuery !== null) {
        jQuery(point.cell).click(function(eventObject) {
          if (this.innerHTML === "") {
            password.addPoint(point);
            this.innerHTML = password.points.length;
            return this.className += " active";
          }
        });
      } else {
        point.cell.onclick = function(eventObject) {
          if (this.innerHTML === "") {
            password.addPoint(point);
            this.innerHTML = password.points.length;
            return this.className += " active";
          }
        };
      }
    }
    return table;
  };

}).call(this);
